// source: src/protobuf/benchmark.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.benchmark.InputMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmark.InputMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.benchmark.InputMessage.repeatedFields_, null);
};
goog.inherits(proto.benchmark.InputMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.benchmark.InputMessage.displayName = 'proto.benchmark.InputMessage';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.benchmark.InputMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmark.InputMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmark.InputMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmark.InputMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.benchmark.InputMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    aList: jspb.Message.toObjectList(msg.getAList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    b: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    c: jspb.Message.getFieldWithDefault(msg, 3, 0),
    d: (f = msg.getD()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    e: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    f: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    pi: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    r: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    s: jspb.Message.getFieldWithDefault(msg, 9, ""),
    t: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmark.InputMessage}
 */
proto.benchmark.InputMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmark.InputMessage;
  return proto.benchmark.InputMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmark.InputMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmark.InputMessage}
 */
proto.benchmark.InputMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addA(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setB(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setC(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setD(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setE(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setF(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPi(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setR(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setT(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmark.InputMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.benchmark.InputMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.benchmark.InputMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.benchmark.InputMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getB();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getC();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getD();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getE();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getF();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getPi();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getR();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getT();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * repeated google.protobuf.Any a = 1;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.benchmark.InputMessage.prototype.getAList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.benchmark.InputMessage} returns this
*/
proto.benchmark.InputMessage.prototype.setAList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.benchmark.InputMessage.prototype.addA = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.clearAList = function() {
  return this.setAList([]);
};


/**
 * optional bool b = 2;
 * @return {boolean}
 */
proto.benchmark.InputMessage.prototype.getB = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setB = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 c = 3;
 * @return {number}
 */
proto.benchmark.InputMessage.prototype.getC = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setC = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp d = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.benchmark.InputMessage.prototype.getD = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.benchmark.InputMessage} returns this
*/
proto.benchmark.InputMessage.prototype.setD = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.clearD = function() {
  return this.setD(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.benchmark.InputMessage.prototype.hasD = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double e = 5;
 * @return {number}
 */
proto.benchmark.InputMessage.prototype.getE = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setE = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float f = 6;
 * @return {number}
 */
proto.benchmark.InputMessage.prototype.getF = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setF = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double pi = 7;
 * @return {number}
 */
proto.benchmark.InputMessage.prototype.getPi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setPi = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float r = 8;
 * @return {number}
 */
proto.benchmark.InputMessage.prototype.getR = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setR = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string s = 9;
 * @return {string}
 */
proto.benchmark.InputMessage.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string t = 10;
 * @return {string}
 */
proto.benchmark.InputMessage.prototype.getT = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.benchmark.InputMessage} returns this
 */
proto.benchmark.InputMessage.prototype.setT = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.benchmark);
